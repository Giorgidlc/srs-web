---

interface Props {
  title:        string;
  description:  string;
  ctaText:      string;
  features: {
    description: string;
    tooltipText: string;
  }[];
}

const { title, description, ctaText, features } = Astro.props;

---

<div class='card-service'>
  <h3>{title}</h3>
  <p>{description} </p>
  <button>{ctaText}</button>
  <ul>
    {
      features.map((item) =>
        <li >{item.description}
          <span class='tooltip-container'>
            {/* El iconInfo.svg */}
            <svg 
              width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-info"><circle cx="12" cy="12" r="10"/><path d="M12 16v-4"/><path d="M12 8h.01"/>
            </svg>
            <span class="tooltip-text">{item.tooltipText}</span>
          </span>
        </li>
      )}
  </ul>

</div>


<style>
  .card-service {
  display: flex;
  flex-direction: column;
  padding: clamp(2.125rem, 1.875rem + 1.25vw, 3rem);
  background-color: var(--color-contrast-3);
  color: var(--color-base);
  min-height: 500px;
  border-radius: 2rem;
  gap: 2rem;
}

.card-service button {
  background-color: var(--color-acent-2);
  color: var(--color-contrast-3);
  width: min(320px, min-content);
  padding: 0.6rem 1.2rem;
  text-wrap: nowrap;
}

.card-service ul {
  list-style: decimal;
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.card-service ul li {
  display: flex;
  justify-content: space-between;
  gap: 1rem;
}

span.tooltip-container {
  position: relative;
  cursor: pointer;
}

span.tooltip-container:hover span.tooltip-text {
  visibility: visible;
  opacity: 1;
}

span.tooltip-text {
  visibility: visible;
  width: 200px;
  background-color: var(--color-contrast);
  color:  var(--color-base);
  text-align: center;
  border-radius: 6px;
  padding: 5px 0;
  position: absolute;
  z-index: 1;
  top: -5px;
  right: 0%;
  opacity: 0;
  transition: opacity 0.3s;
}

</style>