---
interface Props {
  title: string;
  icon: string;
  features: { description: string }[];
}

const { title, icon, features } = Astro.props;
---

<div class="wrap-card-step-by-step">
  <div class="container-title">
    <h4>{title}</h4>
  </div>
  <div class="container-icon">
    <Fragment set:html={icon} />
  </div>
  <div class="container-description">
    <ul>
      {features.map((item) => <li>{item.description}</li>)}
    </ul>
  </div>
</div>

<style>
  .wrap-card-step-by-step {
    display: flex;
    flex-flow: column;
    border-bottom: 2px solid var(--color-base-2);
  }

  .container-title {
    background-color: var(--color-base-2);
    clip-path: polygon(0 0, 93% 0, 100% 50%, 93% 100%, 0 100%, 6.5% 50%);

    & h4 {
      color: var(--color-contrast-3);
      text-align: center;
      padding: 0.6rem 1.8rem;
      text-transform: uppercase;
    }
  }

  .wrap-card-step-by-step:nth-child(2n + 2) {
    border-bottom: 2px solid var(--color-contrast);
    & .container-title {
      background-color: var(--color-contrast);
    }

    & h4 {
      color: var(--color-base);
    }
  }

  .container-icon {
    margin: 0 3rem;
    border: dashed 1px var(--color-base);
    border-top: transparent;
    border-radius: 0 0 1rem 1rem;
    padding: 1rem;
    height: min(9rem, 16dvh);
  }

  .container-description {
    & ul {
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: 1rem;
      gap: 0.1rem;
    }

    & ul li {
      color: var(--color-base);
      list-style-type: none;
      text-transform: uppercase;
      text-align: center;
      font-weight: 600;
    }
  }
</style>
